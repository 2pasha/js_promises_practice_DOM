{"version":3,"sources":["scripts/main.js"],"names":["firstPromise","Promise","resolve","reject","timeout","setTimeout","Error","document","addEventListener","clearTimeout","secondPromise","thirdPromise","leftClick","rightClick","e","button","createNotification","type","message","notification","createElement","dataset","qa","body","appendChild","classList","add","innerHTML","then","success","catch","error"],"mappings":";AAAA,aAEA,IAAMA,EAAe,IAAIC,QAAQ,SAACC,EAASC,GACnCC,IAAAA,EAAUC,WAAW,WACzBF,EAAO,IAAIG,MAAM,gCAChB,KAEHC,SAASC,iBAAiB,QAAS,WACjCC,aAAaL,GACbF,EAAQ,kCAINQ,EAAgB,IAAIT,QAAQ,SAAAC,GAChCK,SAASC,iBAAiB,YAAa,WACrCN,EAAQ,mCAINS,EAAe,IAAIV,QAAQ,SAAAC,GAC3BU,IAAAA,GAAY,EACZC,GAAa,EAEjBN,SAASC,iBAAiB,YAAa,SAAAM,GACpB,IAAbA,EAAEC,SACJH,GAAY,GAGG,IAAbE,EAAEC,SACJF,GAAa,GAGXD,GAAaC,GACfX,EAAQ,kCAKd,SAASc,EAAmBC,EAAMC,GAC1BC,IAAAA,EAAeZ,SAASa,cAAc,OAE5CD,EAAaE,QAAQC,GAAK,eAC1Bf,SAASgB,KAAKC,YAAYL,GAC1BA,EAAaM,UAAUC,IAAOT,GAAAA,OAAAA,IAC9BE,EAAaQ,UAAYT,EAG3BlB,EACG4B,KAAK,SAAAC,GACJb,EAAmB,UAAWa,KAE/BC,MAAM,SAAAC,GACLf,EAAmB,UAAWe,KAGlCrB,EACGkB,KAAK,SAAAC,GACJb,EAAmB,UAAWa,KAGlClB,EACGiB,KAAK,SAAAC,GACJb,EAAmB,UAAWa","file":"main.7f1632cc.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst firstPromise = new Promise((resolve, reject) => {\n  const timeout = setTimeout(() => {\n    reject(new Error('First promise was rejected'));\n  }, 3000);\n\n  document.addEventListener('click', () => {\n    clearTimeout(timeout);\n    resolve('First promise was resolved');\n  });\n});\n\nconst secondPromise = new Promise(resolve => {\n  document.addEventListener('mousedown', () => {\n    resolve('Second promise was resolved');\n  });\n});\n\nconst thirdPromise = new Promise(resolve => {\n  let leftClick = false;\n  let rightClick = false;\n\n  document.addEventListener('mousedown', e => {\n    if (e.button === 0) {\n      leftClick = true;\n    }\n\n    if (e.button === 2) {\n      rightClick = true;\n    }\n\n    if (leftClick && rightClick) {\n      resolve('Third promise was resolved');\n    }\n  });\n});\n\nfunction createNotification(type, message) {\n  const notification = document.createElement('div');\n\n  notification.dataset.qa = 'notification';\n  document.body.appendChild(notification);\n  notification.classList.add(`${type}`);\n  notification.innerHTML = message;\n}\n\nfirstPromise\n  .then(success => {\n    createNotification('success', success);\n  })\n  .catch(error => {\n    createNotification('warning', error);\n  });\n\nsecondPromise\n  .then(success => {\n    createNotification('success', success);\n  });\n\nthirdPromise\n  .then(success => {\n    createNotification('success', success);\n  });\n"]}